Marooned on an island full of dinosaurs 

Set in the 1700s in the Caribbean. Some one marooned you on purpose. You lost your memory? 
Trapped on an island lost to time. Find a treasure chest with a gun in it. Add a sword at some point. 
Need a way of making structures like lost temple ruins. caves. Huts. villagers? hostile locals? Go full Turok? 
Need to keep the scope small enough to finish. It's already hugely complicated. 

Level switching. Change heightmaps from a menu, destroy all objects, regenerate vegetation, and raptors. A menu screen that shows before the level loads? For development it makes sense to be able to swap heightmaps before and during runtime. 

Terrain has a hard limit to how big it can be. 4k textures scaled to 16k. sounds like a lot but everything else is scaled big. Need serpenteen paths that loop around. Need a way to block player besides water. invisible walls where thick jungle is. Create bounding boxes around trees. make areas where trees are too dense to pass. 

invisible wall at the edge of water plane. make a boundary at 30k radius from center for all maps?  

create bounding boxes around trees that collide with the player. and raptors? x

Bridges.

Treasure chest model. Use the mimic from fools path. It's fully rigged and animated. it would be good to know how to do that with raylib. 

Day/Night cycle?

foot steps x

Player Take Damage x

raptors should make more noise. when exiting idle maybe.  x

positional sound - volume attenuation only. raylib can't do 3d audio. or it can but I would have to rewrite sound manager. which I should do anyway. 

raptor agro vision should be higher, sounds heard from further away as well. 

make a handleHeightmap.h or something where we can switch between heightmaps. 

made level select menu.

made dungeon generator. need a way to clear the dungeon, when switching levels. x

dungeons are generated from a 32x32 png image. Where black pixels are walls and white pixels are floor tiles. Red is skeletons, blue is barrels, green is starting position, yellow is light source. 

Need a way to make doors work. Need some kind of barrier that can be removed. making the door arch model fit and be rotated right sounds like a nightmare. 

-Doorways are purple pixels. DoorWays spawn doors which are centered on the doorway arch. Doors can also lead to other levels. Teal pixels are exits that lead to the previous level. Orange pixels are next level doors that lead to the next level. Terrain generated levels have dungeonEnterance struct that spawns a archway with a door that leads to dungeon1. We keep a vector of entrances in level data so we can have multiple entrances to different dungeons from the same over world. 


runaway time for raptors. x 

added skeletons + pathfinding. Simple BFS with smoothPath function. Skeletons have vision by marching through the pixel map. it's not very reliable, but raylib doesn't have built in 3D raycasts. I would need to implement it myself. maybe later.
-Improved ray marching to be mostly reliable. Skeletons now have a alertNearbySkeleton() that looks for other skele's within vision and sets them to chase when they gain visibility of the player, or if they take damage. 

separated raptor AI and skeleton AI into there own functions. So they each have there own switch. Raptors are now only for outdoor use. and skeletons are for dungeons only. I tried raptors in dungeon but their run away behavior messed everything up.
So raptors follow the heightmap and skeletons follow the dungeon Image. 

Add a chest. 

game pad inputs for shoot/swing/block/jump/run/swap weapon

add simple inventory. 4 boxes in the bottom left. It's a map of strings and amounts. so you can have multiple potions in 1 inventory slot. We should make another consumable to justify this type of inventory. like food? maybe you can have multiple keys. and there's just generic keys that opens locked doors and are used up. lock picks? lock picking mini game? 

limit number of health potions you can have? nah. 

Mana potions? Maybe player can throw fireballs. 

stealth? We have working vision cones. sort of. We could make them cones. then draw the cones to show the player the enemies sight. Lean into the grid based nature of the game maybe. If we could highlight floor tiles with a shader we could highlight vision that way. I just want the ability to turn a specific floor tile red. But since it's .glb with baked in texture I can't easily do that. and I never figured out how to apply a texture to some mesh. Everything is just solid colors with shaders or baked in texture of the dungeon. Maybe just make a cube and try to apply a texture to it. a box, a breakable box?

We have multiple models of the barrel. One of which is the barrel smashed. We could give the barrels health and when you hit them with a sword we swap in the broken model. barrels should be like 30 percent bigger. they don't line up with the walls. I want barrels in the corners of the dungeon but since the wall is in the middle of the tile there a gap. could push walls in somehow. 

Doors have a member variable isLocked...implemented locked doors. Locked doors are Aqua colored pixels. The doorway gets set to locked, then the door sets isLocked to dw.isLocked. 

Implemented keys and updated inventory. Keys are consumables. They open locked doors. You can carry keys between levels. We can do some puzzle type stuff with this later. Keys are billboard just like health pot. need to increase the size, just for keys. 
if (key.type == CollectableType::Key) scale = 100

teleporters, fast travel, Ride a big boat to a new over world map. 

Maybe you need to find things to repair your damaged boat. Wood planks, cloth for a sail, rudder, supplies
There is a model of a ship wreck right off the coast of the starting island. swim out to it and collect stuff to build a raft. The goal is to get off the island. We could show the outline of a raft model that slowly gets filled in, as you find more things. 

dungeon 1-1 would be middle islands first dungeon, middle island could have 2 more dungeons. dungeon 1-2, and 1-3, after 1-3 you have collected all the supplies for the raft and sail to the next overworld where you enter dungeon 2-1. islands could have different flora and fauna. 

Take a stab at UI art. Pirate themed, wood with gold trim. Steam punk health bar? Health and stam should be on the bottom, as to not blend in with sky. Could make a console type interface. 

pirates should stay tinted red on death

fill out the rest of map 7.  Big room with just 3 pirates. L shaped room around starting corner. A door on either end. both lead to a locked door. There is a maze between the 2 doors where you find the key. So you might end up on the other side of the map or vise versa depending on where you start. Make the path of least resistance the longest. 

Dungeon 3 should exit back up to surface. on the little island in the back. make another entrance you can get to dungeon 3 by boat or swimming to the other island. 

make dungeon 4 and 5 and put an entrance on one of the side islands. left 4 5 6, right 7 8 9. center 1 2 3 then switch to a different island chain. second island chain should be fat perlin noise. 

would the left island dungeons exit out on the right side? Maybe we could make small island exit and right exit locked from the outside. 

Gold. buys magic scrolls. Lightning, fireball, ice, barrels can contain gold, like diablo. 

what to do about webs? We need to draw webs as a flat quad, they can't be a billboard. but everything else is a billboard and needs to be sorted to not occlude each other. we can't put the flat quad into a vector of billboards. could we make a billboard that always faces a certain direction. 

Made a struct called drawRequest. and a vector of drawRequests. drawRequests contain all the data needed to draw an animated billboard, or flatquad, or decal, everything 2d in the game. Then we sort the vector of drawRequests based on distance to camera, and draw in that order. We have functions called GatherEnemies, GatherDecals ect. that copy the data from the character class to the drawReqest. In the final draw function we have a switch case that draws either flat quads or billboards depending on drawRequestType, an enum class in transparentDraw.h this and transparentDraw.cpp contains all the code to make this happen. we just call gatherAllbillboards, then draw the requests. -this solves all the occlusion problems. 
-doors are not included in this. but it doesn't seem to matter. they don't occlude anything. Should probably add draw flat door to the render pipeline anyway. 

I never explained tint based lighting. Since the dungeons are constructed out of floor tiles and wall segments, we can light each one individually by changing the tint property of the model. We can iterate all the walls and measure the distance to a light source or sources, and change the tint brighter or darker the further away. This makes a really low res lighting system. We can even do dynamic lights by just attaching a light source to a moving object like bullet, and then check for it each frame.


Added line of sight to tint based lighting. each wall segment checks distance to light source AND does a line of sight check. That way light doesn't bleed through walls. Could add double walls to stop light bleeding to other side of lit wall. Player has simpler light source without raycasts. It looks better that way. -Started using worldLOS check instead of dungeon map. 3d raycasts better spread the light if I give it an epsilon. where the ray goes further than it should so it actualy hits the walls. Needed to do this for floor ceiling doors and walls. The ray was stopping at the colliders i guess. not making it to wall.position. 

Changed pirates vision to be just a worldLOS check, instead of both dungeon map and world ray cast. They can now see through open doors better and notice the player when he's around a corner but still in eye sight. Probably can do this for skeleton as well. 

Make a fireball type in bullet. 

bullets get occluded by billboards x fixed. bullets are 3d, draw them before transparent 2d stuff. 

started on a revolver, but Now i'm not too sure I want one. finding a good model was impossible, and it wouldn't fit the pirate era theme. Then what else? Another slow firing black powder weapon is too similar to the blunderbuss. A magic staff? that could shoot magic projectiles. maybe you have a book in your left hand and a staff in your right. You do some dark magic rituals to cast spells. 

Added magic staff, and a bullet parameter fireball. fireballs are just big yellow spheres with a light source attached. Need to apply a shader with a fire texture. maybe work on 3d particle system. Maybe fireball bullets have gravity and fly in an arc until they hit the ground and explode. like a grenade launcher! grenade.h? no it would be a bullet. 
-added arcing to fireballs. still need to apply a shader with a moving texture. 
-firballs need to explode when they hit the ground. Explosions would require particles no? we could do a 3d model of an explosion quake 2 style. both particles and model would be ideal. 

3d particle system. It was easy enough in 2d. Try it in 3d for blood and smoke. Your limited with just raylib. particles is one thing that you can do. so you should do it. 

Added fireballs and particles. Fireball is a model I made in blender with a fire texture attached. it slowly rotates when fired. when it hits the ground or an enemy it spawns a animated explosion decal. While the fireball is in the air it emits dark grey smoke particles and when it explodes it emits orange spark particles. I also add blood particles that get emitted from bullets when they hit a non skeleton enemy. -possibly do half orange half yellow particles on explosion, might look like confetti. 

Add blood particles to sword hits. Would need to add emitter to enemy. spawn blood on take damage. Removes need for spawn blood in bullet. -Moved blood emitter to character. Emit blood on take damage if your not a skeleton. 

make staff not available until you pick it up? Where do you pick it up? Level 4? make it a color on the dungeon map and spawn the model in world at that position. make it a collectable? It's lame if you have it from the beginning. for now just make a hasStaff member variable. then you can only switch to it if you hasStaff. 

-Made an std::vector of weaponType, we can than % vector.size() to scroll through weapons. No matter how many weapons you may have unlocked. We simply add the weaponType to the vector when you pick up the weapon. 

         player.currentWeaponIndex = (player.currentWeaponIndex + 1) % player.collectedWeapons.size();
        activeWeapon = player.collectedWeapons[player.currentWeaponIndex];

sword is bloody when starting in dungeon for mysterious reasons. 

Use dinoBite for spider attack sound. current one is weird sounding. 

make another release with the staff sitting on little island. Maybe we could take a picture of the staff and show a billboard of the staff instead of instancing the 3d model. that seems like more work than just draw model. We would need to worry about sorting if it were a billboard. The model should be scaled correctly to look good at a distance. It would have to be a struct though. we can't just have some one off model floating around, it needs  to be a collectable...it can't be a collectable. It needs to be a one off thing. What if you needed to pick up the blunderbuss or sword. We should have in world pickupable weapons. Start with nothing. you already have the vector of weapon types. What would you call this class? CollectableWeapon.
-made CollectableWeapon class. Uses existing WeaponType enum. instance and add to worldWeapons vector. update and draw the 3d models hovering and spinning. For now start with blunderbuss and sword. find the staff on level 4. 

Staff isn't too overpowered. Should maybe slow the fire rate. Self damage seems good, you can accidently hurt yourself with fireballs if too close, but it's not that much damage, 50 max that falls off with distance. Should the staff have different projectiles? How could we do that? FireFireball(), FireIceball(), FireLightning(). Freezing enemies and them hitting them with the sword shaders them. erase the sprite and spawn ice particles, lots of them with high gravity. Ice ball would emit blue particles when in the air instead of smoke. Ice explosion on hit. Could reuse existing explosion just add an ice flag and change the color. 

Implement mana. Player member var. Mana bar. maxMana, currentMana. animate the mana going down. Mana potions are spawn from barrels, and can be spawned in world with a dark blue pixel maybe. Shooting a fireball only costs like 10 mana. shoot 10 times before you need more mana. May need to make fireballs more powerful if they are going to be limited. 
-implemented mana. 10 mana to cast fireball maybe to low. Barrels can drop mana potions 10 percent of the time. 


Make the light range super far but the intensity low. it blends things out wayyyy better. Well way better for fireball anyway. 
I got it a little bit smoother. 

the gun should bob up and down while you walk. the sword should swing up and down. the staff should do something as well when moving. -added weapon bob to all weapons. bobbing every 2 steps looks most like a how a video game should be. x

make staff shoot slower. - slowed from 0.5 to 1.0

chest open animation seems way too slow. x

bullets now kill skeles in one hit. they seems to be penetrating them. how is that possible? we are early returning? -fixed but I dont remember what was wrong. 

Improved bullet light code.

Character has rotationY var that gets set when moving. We never use this. Why would we need rotationY on character? bullet gets direction from player.position - position. billboards always face camera. Could we use it for something in the future? 

make skeletons attach slightly faster so they actually hit each swing not every other. -feels much better should have fixed this ages ago. They attack slightly faster but way more consistent. Attack anim was 4 frames, 0.2 frame time = 0.8 attack cool down. 


added magic icon for fire and ice. T switches between magic spells when holding the magic staff. 

Refactored Resources.h/cpp to ResourceManager.h/cpp. We no longer have a global variable for every resource. We just look up the resource in a map, by string key when we need it. This allows us to unload all resources automatically, and makes adding a new resource one line of code instead of like 3 in 3 different places. It replaces about 100 global vars. 

Refactored main.cpp. Moved everything out of main.cpp into world. Things in world.cpp control the overWorld map, and some global functions that need to get called. DungeonGeneration.h handles all things dungeon. 

Consider moving your render pipeline out of main and into it's own file. x

Fireball traps. Iceball traps

make a controls menu page. 

Moved all the rendering code to render_pipline.cpp. It's getting harder to remember where I put things. 

Made camera_system.h/cpp. changed camera to a singelton camera = CameraSystem::Get().Active()










